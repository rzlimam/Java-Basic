package day17;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;



public class RolesDao {
	
	private final String TBL_ROLES = "roles";
	private final String COL_IDROLE = "idrole";
	private final String COL_ROLENAME = "rolename";
	
	public void creatTableRole() {
		DataSource ds = new DataSource();
		try {
			Statement statement = ds.getConnection().createStatement();
			statement.execute("CREATE TABLE IF NOT EXISTS public.roles (\r\n" + 
					"	idrole int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,\r\n" + 
					"	rolename varchar NOT NULL,\r\n" + 
					"	CONSTRAINT roles_pk PRIMARY KEY (idrole)\r\n);");
			statement.close();
			ds.closeConnection();
			System.out.println("Table created");
		} catch (SQLException e) {
			System.out.println("Create table failed! "+e.getMessage());
		}
	}
	
	public void insertRole(String roleName) {
		DataSource ds = new DataSource();
		try {
			Statement statement = ds.getConnection().createStatement();
			statement.execute("INSERT INTO " + TBL_ROLES +
					"(" + COL_ROLENAME + ") Values " +
					"('" + roleName + "');");
			statement.close();
			ds.closeConnection();
			System.out.println("User inserted");
		}catch (SQLException e) {
			System.out.println("Insert user failed "+e.getMessage());
		}
	}
	
	public Role getRole(String roleName) {
		DataSource ds = new DataSource();
		Role role = new Role();
		try {
			Statement statement = ds.getConnection().createStatement();
			String query = "SELECT * FROM " + TBL_ROLES + 
					" WHERE " + COL_ROLENAME + " = '" + roleName + "'";
			ResultSet result = statement.executeQuery(query);
			while(result.next()) {
				role.setIdRole(result.getInt(COL_IDROLE));
				role.setRoleName(result.getString(COL_ROLENAME));
				statement.close();
				ds.closeConnection();
				return role;
			}
			statement.close();
			ds.closeConnection();
		} catch (SQLException e) {
			System.out.println(e.getMessage());
		}
		return null;
	}
	
	public Role getRoleName (int idRole) {
		DataSource ds = new DataSource();
		Role role = new Role();
		try {
			Statement statement = ds.getConnection().createStatement();
			String query = "SELECT * FROM " + TBL_ROLES + 
					" WHERE " + COL_IDROLE + " = " + idRole;
			ResultSet result = statement.executeQuery(query);
			while(result.next()) {
				role.setIdRole(result.getInt(COL_IDROLE));
				role.setRoleName(result.getString(COL_ROLENAME));
				statement.close();
				ds.closeConnection();
				return role;
			}
			statement.close();
			ds.closeConnection();
		} catch (SQLException e) {
			System.out.println(e.getMessage());
		}
		return null;
	}
	
	public void updateRole(Role role) {
		DataSource ds = new DataSource();
		try {
			Statement statement = ds.getConnection().createStatement();
			String query = "UPDATE " + TBL_ROLES +
					" SET " + COL_ROLENAME + " = '" + role.getRoleName() + "'" + 
					" WHERE " + COL_IDROLE + " = " + role.getIdRole() ;
			statement.execute(query);
			statement.close();
			ds.closeConnection();
			System.out.println("Role edited");
		}catch (SQLException e) {
			System.out.println("Edit role failed");
		}
	}
	
	public void deleteRole(String roleName) {
		DataSource ds = new DataSource();
		try {
			Statement statement = ds.getConnection().createStatement();
			statement.execute("DELETE FROM " + TBL_ROLES +
					" WHERE " + COL_ROLENAME + " = '" + roleName + "'");
			statement.close();
			ds.closeConnection();
			System.out.println("Role deleted");
		} catch (SQLException e) {
			System.out.println("Delete Role failed "+e.getMessage());
		}
	}
	
	public void diplayRole() {
		DataSource ds = new DataSource();
		int counter = 1;
		try {
			Statement statement = ds.getConnection().createStatement();
			ResultSet result = statement.executeQuery("SELECT * FROM " + TBL_ROLES);
			while(result.next()) {
				System.out.println(counter+ ". Role Name : "+ result.getString(COL_ROLENAME));
				counter++;
			}
		} catch (SQLException e) {
			System.out.println("Gagal retrieve "+e.getMessage());
		}
	}

}
